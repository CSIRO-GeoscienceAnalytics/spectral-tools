name: Release

on:
  push:
    tags:
      - v*

jobs:

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }} x64
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python package dependencies
      run: pip install cython wheel

    - name: Build binary wheel
      run: python setup.py bdist_wheel

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-linux-${{ matrix.python-version }}
        path: dist/

  # build-macos:
  #   runs-on: macos-latest
  #   strategy:
  #     max-parallel: 4
  #     matrix:
  #       python-version: [3.8, 3.9, 3.10, 3.11]

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up Python ${{ matrix.python-version }} x64
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: ${{ matrix.python-version }}

  #   - name: Install Python package dependencies
  #     run: pip install cython wheel

  #   - name: Build binary wheel
  #     run: python setup.py bdist_wheel

  #   - name: Archive dist artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: dist-macos-${{ matrix.python-version }}
  #       path: dist

  build-windows:
    runs-on: windows-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Download Build Tools for Visual Studio 2019
      run: Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_buildtools.exe -OutFile vs_buildtools.exe

    - name: Run vs_buildtools.exe install
      run: ./vs_buildtools.exe --quiet --wait --norestart --nocache --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 --add Microsoft.VisualStudio.Component.VC.140 --includeRecommended

    - name: Set up Python ${{ matrix.python-version }} x64
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Install Python package dependencies
      run: pip install cython wheel

    - name: Build binary wheel
      run: python setup.py bdist_wheel

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-windows-${{ matrix.python-version }}
        path: dist/

  upload:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: "1.3.2"

    - name: Install dependencies
      run: |
        poetry install
    - name: Create source dist
      run: poetry run python setup.py sdist

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - run: find artifacts/ -type f -print0 | xargs -0 mv -t dist

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: dist

    - name: Create PYPIRC
      env:
        PYPI_RC: ${{ secrets.PYPIRC_TEST }}
      run: |
        echo $PYPI_RC > ~/.pypirc

    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TEST_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
